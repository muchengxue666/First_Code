cmake_minimum_required(VERSION 3.16)
project(CinemaSystem)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

if(WIN32)
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -mwindows")
endif()

# 自动处理 Qt 的特殊构建步骤
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)

# 设置 Qt 路径 - 确保路径正确
set(CMAKE_PREFIX_PATH "E:/Qt/6.9.3/mingw_64")

# 查找 Qt 组件 - 确保包含 Widgets
find_package(Qt6 REQUIRED COMPONENTS Core Widgets)

# 设置包含目录 - 添加这一行
include_directories(${CMAKE_SOURCE_DIR}/include)

set(SOURCES
    src/main.cpp
    src/User.cpp
    src/Movie.cpp
    src/Schedule.cpp
    src/CinemaHall.cpp
    src/Ticket.cpp
    src/DataManager.cpp
    src/MainWindow.cpp
)

set(HEADERS
    include/User.h
    include/Movie.h
    include/Schedule.h
    include/CinemaHall.h
    include/Ticket.h
    include/DataManager.h
    include/MainWindow.h
)

# 添加资源文件
set(RESOURCES
    resources.qrc
)

# 创建可执行文件
add_executable(cinema_system ${SOURCES} ${HEADERS} ${RESOURCES})

# 设置目标属性包含目录 - 更现代的方式
target_include_directories(cinema_system PRIVATE ${CMAKE_SOURCE_DIR}/include)

# 链接 Qt 库
target_link_libraries(cinema_system Qt6::Core Qt6::Widgets)

# 设置输出目录
set_target_properties(cinema_system PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}
)
